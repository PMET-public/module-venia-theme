@import 'lib/_responsive_utilities.less';

.hide {
    display: none !important;
}

.invisible {
    visibility: hidden;
}

//
// Responsive: Utility classes
// --------------------------------------------------


// IE10 in Windows (Phone) 8
//
// Support for responsive views via media queries is kind of borked in IE10, for
// Surface/desktop in split view and for Windows Phone 8. This particular fix
// must be accompanied by a snippet of JavaScript to sniff the user agent and
// apply some conditional CSS to *only* the Surface/desktop Windows 8. Look at
// our Getting Started page for more information on this bug.
//
// For more information, see the following:
//
// Issue: https://github.com/twbs/bootstrap/issues/10497
// Docs: http://getbootstrap.com/getting-started/#support-ie10-width
// Source: http://timkadlec.com/2013/01/windows-phone-8-and-device-width/
// Source: http://timkadlec.com/2012/10/ie10-snap-mode-and-responsive-design/

@-ms-viewport {
    width: device-width;
}

[class^="visible-"] {
    display: none !important;
}

.visible-xxxs {
    @media (max-width: (@screen__xxs - 1)) {
        .responsive-visibility();
    }
}
.visible-xxxs-block {
    @media (max-width: (@screen__xxs - 1)) {
        display: block !important;
    }
}
.visible-xxxs-inline {
    @media (max-width: (@screen__xxs - 1)) {
        display: inline !important;
    }
}
.visible-xxxs-inline-block {
    @media (max-width: (@screen__xxs - 1)) {
        display: inline-block !important;
    }
}

.visible-xxs {
    @media (min-width: @screen__xxs) and (max-width: (@screen__xs - 1)) {
        .responsive-visibility();
    }
}
.visible-xxs-block {
    @media (min-width: @screen__xxs) and (max-width: (@screen__xs - 1)) {
        display: block !important;
    }
}
.visible-xxs-inline {
    @media (min-width: @screen__xxs) and (max-width: (@screen__xs - 1)) {
        display: inline !important;
    }
}
.visible-xxs-inline-block {
    @media (min-width: @screen__xxs) and (max-width: (@screen__xs - 1)) {
        display: inline-block !important;
    }
}

.visible-xs {
    @media (min-width: @screen__xs) and (max-width: (@screen__s - 1)) {
        .responsive-visibility();
    }
}
.visible-xs-block {
    @media (min-width: @screen__xs) and (max-width: (@screen__s - 1)) {
        display: block !important;
    }
}
.visible-xs-inline {
    @media (min-width: @screen__xs) and (max-width: (@screen__s - 1)) {
        display: inline !important;
    }
}
.visible-xs-inline-block {
    @media (min-width: @screen__xs) and (max-width: (@screen__s - 1)) {
        display: inline-block !important;
    }
}

.visible-s {
    @media (min-width: @screen__s) and (max-width: (@screen__m - 1)) {
        .responsive-visibility();
    }
}
.visible-s-block {
    @media (min-width: @screen__s) and (max-width: (@screen__m - 1)) {
        display: block !important;
    }
}
.visible-s-inline {
    @media (min-width: @screen__s) and (max-width: (@screen__m - 1)) {
        display: inline !important;
    }
}
.visible-s-inline-block {
    @media (min-width: @screen__s) and (max-width: (@screen__m - 1)) {
        display: inline-block !important;
    }
}

.visible-m {
    @media (min-width: @screen__m) and (max-width: (@screen__l - 1)) {
        .responsive-visibility();
    }
}
.visible-m-block {
    @media (min-width: @screen__m) and (max-width: (@screen__l - 1)) {
        display: block !important;
    }
}
.visible-m-inline {
    @media (min-width: @screen__m) and (max-width: (@screen__l - 1)) {
        display: inline !important;
    }
}
.visible-m-inline-block {
    @media (min-width: @screen__m) and (max-width: (@screen__l - 1)) {
        display: inline-block !important;
    }
}

.visible-l {
    @media (min-width: @screen__l) and (max-width: (@screen__ll - 1)) {
        .responsive-visibility();
    }
}
.visible-l-block {
    @media (min-width: @screen__l) and (max-width: (@screen__ll - 1)) {
        display: block !important;
    }
}
.visible-l-inline {
    @media (min-width: @screen__l) and (max-width: (@screen__ll - 1)) {
        display: inline !important;
    }
}
.visible-l-inline-block {
    @media (min-width: @screen__l) and (max-width: (@screen__ll - 1)) {
        display: inline-block !important;
    }
}

.visible-ll {
    @media (min-width: @screen__ll) and (max-width: (@screen__xl - 1)) {
        .responsive-visibility();
    }
}
.visible-ll-block {
    @media (min-width: @screen__ll) and (max-width: (@screen__xl - 1)) {
        display: block !important;
    }
}
.visible-ll-inline {
    @media (min-width: @screen__ll) and (max-width: (@screen__xl - 1)) {
        display: inline !important;
    }
}
.visible-ll-inline-block {
    @media (min-width: @screen__ll) and (max-width: (@screen__xl - 1)) {
        display: inline-block !important;
    }
}


.visible-xl {
    @media (min-width: @screen__xl) {
        .responsive-visibility();
    }
}
.visible-xl-block {
    @media (min-width: @screen__xl) {
        display: block !important;
    }
}
.visible-xl-inline {
    @media (min-width: @screen__xl) {
        display: inline !important;
    }
}
.visible-xl-inline-block {
    @media (min-width: @screen__xl) {
        display: inline-block !important;
    }
}

.hidden-xxxs {
    @media (max-width: (@screen__xxs - 1)) {
        .responsive-invisibility();
    }
}
.hidden-xxs {
    @media (min-width: @screen__xxs) and (max-width: (@screen__xs - 1)) {
        .responsive-invisibility();
    }
}
.hidden-xs {
    @media (min-width: @screen__xs) and (max-width: (@screen__s - 1)) {
        .responsive-invisibility();
    }
}
.hidden-s {
    @media (min-width: @screen__s) and (max-width: (@screen__m - 1)) {
        .responsive-invisibility();
    }
}
.hidden-m {
    @media (min-width: @screen__m) and (max-width: (@screen__l - 1)) {
        .responsive-invisibility();
    }
}
.hidden-l {
    @media (min-width: @screen__l) and (max-width: (@screen__ll - 1)) {
        .responsive-invisibility();
    }
}
.hidden-ll {
    @media (min-width: @screen__ll) and (max-width: (@screen__xl - 1)) {
        .responsive-invisibility();
    }
}
.hidden-xl {
    @media (min-width: @screen__xl) {
        .responsive-invisibility();
    }
}


// Print utilities
//
// Media queries are placed on the inside to be mixin-friendly.

// Note: Deprecated .visible-print as of v3.2.0
.visible-print {
    .responsive-invisibility();

    @media print {
        .responsive-visibility();
    }
}
.visible-print-block {
    display: none !important;

    @media print {
        display: block !important;
    }
}
.visible-print-inline {
    display: none !important;

    @media print {
        display: inline !important;
    }
}
.visible-print-inline-block {
    display: none !important;

    @media print {
        display: inline-block !important;
    }
}

.hidden-print {
    @media print {
        .responsive-invisibility();
    }
}
